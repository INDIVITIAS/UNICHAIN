#!/bin/bash

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
YELLOW='\033[1;33m'
MAGENTA='\033[0;35m'
RESET='\033[0m'

# –ò–∫–æ–Ω–∫–∏ –¥–ª—è –º–µ–Ω—é
ICON_TELEGRAM="üöÄ"
ICON_INSTALL="üõ†Ô∏è"
ICON_LOGS="üìÑ"
ICON_STOP="‚èπÔ∏è"
ICON_START="‚ñ∂Ô∏è"
ICON_WALLET="üí∞"
ICON_EXIT="‚ùå"
ICON_CHANGE_RPC="üîÑ"
ICON_DELETE="üóëÔ∏è"
ICON_KEFIR="üçº"
ICON_RESTART="üîÑ"
ICON_CHECK="‚úÖ"
ICON_LOG_OP_NODE="üìú"
ICON_LOG_EXEC_CLIENT="üìú"
ICON_DISABLE="‚èπÔ∏è"
ICON_PRIVATE_KEY="üîë"

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è –≥—Ä–∞–Ω–∏—Ü
draw_top_border() {
    echo -e "${CYAN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${RESET}"
}

draw_middle_border() {
    echo -e "${CYAN}‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£${RESET}"
}

draw_bottom_border() {
    echo -e "${CYAN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${RESET}"
}

# –í—ã–≤–æ–¥ ASCII-–ª–æ–≥–æ—Ç–∏–ø–∞ –∏ —Å—Å—ã–ª–æ–∫
display_ascii() {
    echo -e "${CYAN}   ____   _  __   ___    ____ _   __   ____ ______   ____   ___    ____${RESET}"
    echo -e "${CYAN}  /  _/  / |/ /  / _ \\  /  _/| | / /  /  _//_  __/  /  _/  / _ |  / __/${RESET}"
    echo -e "${CYAN} _/ /   /    /  / // / _/ /  | |/ /  _/ /   / /    _/ /   / __ | _\\ \\  ${RESET}"
    echo -e "${CYAN}/___/  /_/|_/  /____/ /___/  |___/  /___/  /_/    /___/  /_/ |_|/___/  ${RESET}"
    echo -e ""
    echo -e "${YELLOW}–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ Telegram: https://t.me/CryptalikBTC${RESET}"
    echo -e "${YELLOW}–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ YouTube: https://www.youtube.com/@Cryptalik${RESET}"
    echo -e "${YELLOW}–ó–¥–µ—Å—å –ø—Ä–æ –∞–∏—Ä–¥—Ä–æ–ø—ã –∏ –Ω–æ–¥—ã: https://t.me/indivitias${RESET}"
    echo -e "${YELLOW}–ö—É–ø–∏ –º–Ω–µ –∫—Ä–∏–ø—Ç–æ –±—É—Ç—ã–ª–æ—á–∫—É... ${ICON_KEFIR}–∫–µ—Ñ–∏—Ä–∞ üòè${RESET} ${MAGENTA} üëâ  https://bit.ly/4eBbfIr  üëà ${MAGENTA}"
    echo -e ""
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    for cmd in curl docker docker-compose git; do
        if ! command -v $cmd &> /dev/null; then
            echo -e "${RED}‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–∞—è –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç—å '$cmd' –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ—ë.${RESET}"
            exit 1
        fi
    done
}

# –§—É–Ω–∫—Ü–∏–∏
download_node() {
    echo '–ù–∞—á–∏–Ω–∞—é —É—Å—Ç–∞–Ω–æ–≤–∫—É...'
    sudo apt update -y && sudo apt upgrade -y
    sudo apt-get install make build-essential unzip lz4 gcc git jq -y
    sudo apt install docker.io -y
    sudo systemctl start docker
    sudo systemctl enable docker
    sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
    sudo chmod +x /usr/local/bin/docker-compose
    git clone https://github.com/Uniswap/unichain-node || { echo -e "${RED}–ù–µ —É–¥–∞–ª–æ—Å—å –∫–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π.${RESET}"; return; }
    cd unichain-node || { echo -e "${RED}–ù–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å –∑–∞–π—Ç–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é.${RESET}"; return; }
    if [[ -f .env.sepolia ]]; then
        sed -i 's|^OP_NODE_L1_ETH_RPC=.*$|OP_NODE_L1_ETH_RPC=https://ethereum-sepolia-rpc.publicnode.com|' .env.sepolia
        sed -i 's|^OP_NODE_L1_BEACON=.*$|OP_NODE_L1_BEACON=https://ethereum-sepolia-beacon-api.publicnode.com|' .env.sepolia
    else
        echo -e "${RED}Sepolia ENV –Ω–µ –±—ã–ª–æ –Ω–∞–π–¥–µ–Ω–æ.${RESET}"
        return
    fi
    sudo docker-compose up -d || { echo -e "${RED}–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å docker-compose.${RESET}"; return; }
    echo -e "${GREEN}‚úÖ –ù–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.${RESET}"
    read -p "–ù–∞–∂–º–∏ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..."
}

restart_node() {
    echo -e "${GREEN}üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –Ω–æ–¥—ã...${RESET}"
    HOMEDIR="$HOME"
    sudo docker-compose -f "${HOMEDIR}/unichain-node/docker-compose.yml" down
    sudo docker-compose -f "${HOMEDIR}/unichain-node/docker-compose.yml" up -d
    echo -e "${GREEN}‚úÖ –ù–æ–¥–∞ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω–∞.${RESET}"
    read -p "–ù–∞–∂–º–∏ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..."
}

check_node() {
    echo -e "${GREEN}‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –Ω–æ–¥—ã...${RESET}"
    response=$(curl -s -d '{"id":1,"jsonrpc":"2.0","method":"eth_getBlockByNumber","params":["latest",false]}' \
      -H "Content-Type: application/json" http://localhost:8545)
    if [[ -n "$response" ]]; then
        echo -e "${BLUE}–û—Ç–≤–µ—Ç:${RESET} $response"
    else
        echo -e "${RED}‚ùå –ù–æ–¥–∞ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç.${RESET}"
    fi
    read -p "–ù–∞–∂–º–∏ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..."
}

check_logs_op_node() {
    echo -e "${GREEN}üìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –¥–ª—è unichain-node-op-node-1...${RESET}"
    sudo docker logs unichain-node-op-node-1 || { echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏.${RESET}"; }
    read -p "–ù–∞–∂–º–∏ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..."
}

check_logs_execution_client() {
    echo -e "${GREEN}üìÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤ –¥–ª—è unichain-node-execution-client-1...${RESET}"
    sudo docker logs unichain-node-execution-client-1 || { echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ª–æ–≥–∏.${RESET}"; }
    read -p "–ù–∞–∂–º–∏ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..."
}

disable_node() {
    echo -e "${GREEN}‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã...${RESET}"
    HOMEDIR="$HOME"
    sudo docker-compose -f "${HOMEDIR}/unichain-node/docker-compose.yml" down || { echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É.${RESET}"; }
    echo -e "${GREEN}‚úÖ –ù–æ–¥–∞ –±—ã–ª–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.${RESET}"
    read -p "–ù–∞–∂–º–∏ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..."
}

display_private_key() {
    if [[ -f "$HOME/unichain-node/geth-data/geth/nodekey" ]]; then
        echo -e "${YELLOW}–í–∞—à –ø—Ä–∏–≤–∞—Ç–Ω–∏–∫:${RESET} \n"
        cat "$HOME/unichain-node/geth-data/geth/nodekey"
    else
        echo -e "${RED}‚ùå –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω.${RESET}"
    fi
    read -p "–ù–∞–∂–º–∏ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..."
}

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –º–µ–Ω—é
check_dependencies
while true; do
    draw_top_border
    display_ascii
    draw_middle_border
    echo -e "    ${YELLOW}–°–¥–µ–ª–∞–π —Å–≤–æ–π –≤—ã–±–æ—Ä:${RESET}"
    echo
    echo -e "    ${CYAN}1.${RESET} ${ICON_INSTALL} –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
    echo -e "    ${CYAN}2.${RESET} ${ICON_RESTART} –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É"
    echo -e "    ${CYAN}3.${RESET} ${ICON_CHECK} –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–æ–¥—É"
    echo -e "    ${CYAN}4.${RESET} ${ICON_LOG_OP_NODE} –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ –¥–ª—è unichain node op node"
    echo -e "    ${CYAN}5.${RESET} ${ICON_LOG_EXEC_CLIENT} –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ –¥–ª—è unichain node execution client"
    echo -e "    ${CYAN}6.${RESET} ${ICON_DISABLE} –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
    echo -e "    ${CYAN}7.${RESET} ${ICON_PRIVATE_KEY} –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω–∏–∫"
    echo -e "    ${CYAN}0.${RESET} ${ICON_EXIT} –í—ã—Ö–æ–¥"
    echo
    draw_bottom_border
    echo -e "${CYAN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${RESET}"
    echo -e "${CYAN}‚ïë${RESET}              ${YELLOW}–°—é–¥–∞ –≤–≤–æ–¥–∏ [0-7]:${RESET}           ${CYAN}‚ïë${RESET}"
    echo -e "${CYAN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${RESET}"
    read -p " " choice

    case $choice in
        1) download_node ;;
        2) restart_node ;;
        3) check_node ;;
        4) check_logs_op_node ;;
        5) check_logs_execution_client ;;
        6) disable_node ;;
        7) display_private_key ;;
        0) 
            echo -e "${GREEN}‚ùå –í—ã—Ö–æ–¥...${RESET}"
            exit 0 
            ;;
        *) 
            echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤–≤–æ–¥. –ü—Ä–æ–±—É–π –µ—â–µ.${RESET}"
            ;;
    esac
done
