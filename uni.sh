#!/bin/bash

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ü–≤–µ—Ç–æ–≤ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
YELLOW='\033[1;33m'
MAGENTA='\033[0;35m'
RESET='\033[0m'

# –ò–∫–æ–Ω–∫–∏ –¥–ª—è –ø—É–Ω–∫—Ç–æ–≤ –º–µ–Ω—é
ICON_INSTALL="üõ†Ô∏è"
ICON_RESTART="üîÑ"
ICON_CHECK="‚úÖ"
ICON_LOG_OP_NODE="üìÑ"
ICON_LOG_EXEC_CLIENT="üìÑ"
ICON_DISABLE="‚èπÔ∏è"
ICON_EXIT="‚ùå"

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è –≥—Ä–∞–Ω–∏—Ü
draw_top_border() {
    echo -e "${CYAN}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${RESET}"
}

draw_middle_border() {
    echo -e "${CYAN}‚ï†‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ï£${RESET}"
}

draw_bottom_border() {
    echo -e "${CYAN}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${RESET}"
}

# –õ–æ–≥–æ—Ç–∏–ø –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
display_ascii() {
    echo -e "${CYAN}   ____   _  __   ___    ____ _   __   ____ ______   ____   ___    ____${RESET}"
    echo -e "${CYAN}  /  _/  / |/ /  / _ \  /  _/| | / /  /  _//_  __/  /  _/  / _ |  / __/${RESET}"
    echo -e "${CYAN} _/ /   /    /  / // / _/ /  | |/ /  _/ /   / /    _/ /   / __ | _\ \  ${RESET}"
    echo -e "${CYAN}/___/  /_/|_/  /____/ /___/  |___/  /___/  /_/    /___/  /_/ |_|/___/  ${RESET}"
    echo -e ""
    echo -e "${YELLOW}–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ Telegram: https://t.me/CryptalikBTC${RESET}"
    echo -e "${YELLOW}–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ YouTube: https://www.youtube.com/@Cryptalik${RESET}"
    echo -e "${YELLOW}–ó–¥–µ—Å—å –ø—Ä–æ –∞–∏—Ä–¥—Ä–æ–ø—ã –∏ –Ω–æ–¥—ã: https://t.me/indivitias${RESET}"
    echo -e "${YELLOW}–ö—É–ø–∏ –º–Ω–µ –∫—Ä–∏–ø—Ç–æ –±—É—Ç—ã–ª–æ—á–∫—É... ${ICON_KEFIR}–∫–µ—Ñ–∏—Ä–∞ üòè${RESET} ${MAGENTA} üëâ  https://bit.ly/4eBbfIr  üëà ${MAGENTA}"
    echo -e ""
    echo -e "${CYAN}–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:${RESET}"
    echo -e "  - ${YELLOW}–ü—Ä–æ—Å–º–æ—Ç—Ä —Ñ–∞–π–ª–æ–≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:${RESET} ll"
    echo -e "  - ${YELLOW}–ó–∞–ø—É—Å–∫ –º–µ–Ω—é —Å–∫—Ä–∏–ø—Ç–∞ (–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∞) –∏–∑ –∫–æ—Ä–Ω—è:${RESET} bash uni.sh"
    echo -e ""
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–æ–≤
check_ports() {
    ports_tcp=(30303 8545 8546 9222 9545)
    ports_udp=(30303 9222)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º TCP –ø–æ—Ä—Ç—ã
    for port in "${ports_tcp[@]}"; do
        nc -zv 127.0.0.1 $port &>/dev/null
        if [ $? -eq 0 ]; then
            echo -e "${GREEN}TCP –ø–æ—Ä—Ç $port –¥–æ—Å—Ç—É–ø–µ–Ω${RESET}"
        else
            echo -e "${RED}TCP –ø–æ—Ä—Ç $port –∑–∞–Ω—è—Ç –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${RESET}"
            return 1
        fi
    done

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º UDP –ø–æ—Ä—Ç—ã
    for port in "${ports_udp[@]}"; do
        nc -zvu 127.0.0.1 $port &>/dev/null
        if [ $? -eq 0 ]; then
            echo -e "${GREEN}UDP –ø–æ—Ä—Ç $port –¥–æ—Å—Ç—É–ø–µ–Ω${RESET}"
        else
            echo -e "${RED}UDP –ø–æ—Ä—Ç $port –∑–∞–Ω—è—Ç –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω${RESET}"
            return 1
        fi
    done
}

# –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É
install_node() {
    cd
    if docker ps -a --format '{{.Names}}' | grep -q "^unichain-node-execution-client-1$"; then
        echo -e "${YELLOW}üü° –ù–æ–¥–∞ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.${RESET}"
    else
        echo -e "${GREEN}üü¢ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–¥—ã...${RESET}"
        sudo apt update && sudo apt upgrade -y
        sudo apt install docker.io -y
        sudo systemctl start docker
        sudo systemctl enable docker

        sudo curl -L "https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

        git clone https://github.com/Uniswap/unichain-node
        cd unichain-node || { echo -e "${RED}‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–π—Ç–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é unichain-node.${RESET}"; return; }

        if [[ -f .env.sepolia ]]; then
            sed -i 's|^OP_NODE_L1_ETH_RPC=.*$|OP_NODE_L1_ETH_RPC=https://ethereum-sepolia-rpc.publicnode.com|' .env.sepolia
            sed -i 's|^OP_NODE_L1_BEACON=.*$|OP_NODE_L1_BEACON=https://ethereum-sepolia-beacon-api.publicnode.com|' .env.sepolia
        else
            echo -e "${RED}‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω —Ñ–∞–π–ª .env.sepolia!${RESET}"
            return
        fi

        sudo docker-compose up -d

        echo -e "${GREEN}‚úÖ –ù–æ–¥–∞ —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.${RESET}"
    fi
    echo
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é..."
}

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–¥—É
restart_node() {
    echo -e "${GREEN}üîÑ –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–¥—É...${RESET}"
    HOMEDIR="$HOME"
    sudo docker-compose -f "${HOMEDIR}/unichain-node/docker-compose.yml" down
    sudo docker-compose -f "${HOMEDIR}/unichain-node/docker-compose.yml" up -d
    echo -e "${GREEN}‚úÖ –ù–æ–¥–∞ –±—ã–ª–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞.${RESET}"
    echo
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é..."
}

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–æ–¥—É
check_node() {
    echo -e "${GREEN}‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–æ–¥—ã...${RESET}"
    docker ps
    echo
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é..."
}

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ –Ω–æ–¥—ã OP
check_logs_op_node() {
    echo -e "${GREEN}‚úÖ –õ–æ–≥–∏ –Ω–æ–¥—ã OP...${RESET}"
    docker logs -f unichain-node-op-node
    echo
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é..."
}

# –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ Execution Client
check_logs_execution_client() {
    echo -e "${GREEN}‚úÖ –õ–æ–≥–∏ Execution Client...${RESET}"
    docker logs -f unichain-node-execution-client
    echo
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é..."
}

# –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É
disable_node() {
    echo -e "${GREEN}‚èπÔ∏è –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–¥—É...${RESET}"
    HOMEDIR="$HOME"
    sudo docker-compose -f "${HOMEDIR}/unichain-node/docker-compose.yml" down
    echo -e "${GREEN}‚úÖ –ù–æ–¥–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞.${RESET}"
    echo
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é..."
}

# –ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞
view_private_key() {
    cd $HOME
    if [ -f "unichain-node/geth-data/geth/nodekey" ]; then
        echo -e "${CYAN}–í–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á: ${RESET}"
        cat unichain-node/geth-data/geth/nodekey
    else
        echo -e "${RED}‚ùå –ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω!${RESET}"
    fi
    echo
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é..."
}

# –ì–ª–∞–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–≥—Ä–∞–º–º—ã
while true; do
    check_ports
    if [ $? -ne 0 ]; then
        echo -e "${RED}–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Ä—Ç—ã –∑–∞–Ω—è—Ç—ã –∏–ª–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã. –°–∫—Ä–∏–ø—Ç –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É.${RESET}"
        exit 1
    fi

    clear
    draw_top_border
    display_ascii
    draw_bottom_border
    echo -e "${CYAN}–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: ${RESET}"
    echo -e "1) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
    echo -e "2) –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–¥—É"
    echo -e "3) –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–æ–¥—ã"
    echo -e "4) –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ OP –Ω–æ–¥—ã"
    echo -e "5) –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ Execution Client"
    echo -e "6) –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
    echo -e "7) –ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞"
    echo -e "0) –í—ã—Ö–æ–¥"
    read -p "–í–∞—à –≤—ã–±–æ—Ä: " choice

    case $choice in
        1) install_node ;;
        2) restart_node ;;
        3) check_node ;;
        4) check_logs_op_node ;;
        5) check_logs_execution_client ;;
        6) disable_node ;;
        7) view_private_key ;;
        0) break ;;
        *) echo -e "${RED}‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 7.${RESET}" ;;
    esac
done
